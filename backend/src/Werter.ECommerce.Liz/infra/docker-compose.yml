version: '3.2'

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:



services:
  
  mongodb:
    image: mongo:6.0.4-jammy
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: lizandropolis
      MONGO_INITDB_ROOT_PASSWORD: lizandropolis
    command: --auth
    volumes:
      - mongodb_data:/data/db
    deploy:
      resources:
        limits:
          memory: 4G
  
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: lizandropolis
      ME_CONFIG_MONGODB_ADMINPASSWORD: lizandropolis
      ME_CONFIG_MONGODB_URL: mongodb://lizandropolis:lizandropolis@mongodb:27017/
    depends_on:
      - mongodb
    deploy:
      resources:
        limits:
          memory: 500MB


#  prometheus:
#    image: prom/prometheus:v2.42.0
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    deploy:
#      resources:
#        limits:
#          memory: 2G
#      placement:
#        constraints:
#          - node.role==manager
#      restart_policy:
#        condition: on-failure
#  
#  
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    volumes:
#      - grafana_data:/var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=password
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus
#    deploy:
#      resources:
#        limits:
#          memory: 2G
#      placement:
#        constraints:
#          - node.role==manager
#      restart_policy:
#        condition: on-failure

